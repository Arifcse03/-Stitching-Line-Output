package mnj.ont.model.lov.views;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 14 15:22:45 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SizeLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SystemId {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getSystemId();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        DivisionId {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getDivisionId();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        LineNo {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getLineNo();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setLineNo((String)value);
            }
        }
        ,
        Style {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getStyle();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Season {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getSeason();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Color {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getColor();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        WashName {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getWashName();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setWashName((String)value);
            }
        }
        ,
        Inseam {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getInseam();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setInseam((String)value);
            }
        }
        ,
        SizeVal {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getSizeVal();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setSizeVal((String)value);
            }
        }
        ,
        TotalQty {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getTotalQty();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setTotalQty((Number)value);
            }
        }
        ,
        PrevProd {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getPrevProd();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setPrevProd((Number)value);
            }
        }
        ,
        BelQty {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getBelQty();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setBelQty((Number)value);
            }
        }
        ,
        PrevRejQty {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getPrevRejQty();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setPrevRejQty((Number)value);
            }
        }
        ,
        Wipqty {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getWipqty();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setWipqty((Number)value);
            }
        }
        ,
        InseamSizeConcat {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getInseamSizeConcat();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setInseamSizeConcat((String)value);
            }
        }
        ,
        SizeQty {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getSizeQty();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setSizeQty((Number)value);
            }
        }
        ,
        Flag {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getFlag();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        SelSize {
            public Object get(SizeLOVRowImpl obj) {
                return obj.getSelSize();
            }

            public void put(SizeLOVRowImpl obj, Object value) {
                obj.setSelSize((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SizeLOVRowImpl object);

        public abstract void put(SizeLOVRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int LINENO = AttributesEnum.LineNo.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int WASHNAME = AttributesEnum.WashName.index();
    public static final int INSEAM = AttributesEnum.Inseam.index();
    public static final int SIZEVAL = AttributesEnum.SizeVal.index();
    public static final int TOTALQTY = AttributesEnum.TotalQty.index();
    public static final int PREVPROD = AttributesEnum.PrevProd.index();
    public static final int BELQTY = AttributesEnum.BelQty.index();
    public static final int PREVREJQTY = AttributesEnum.PrevRejQty.index();
    public static final int WIPQTY = AttributesEnum.Wipqty.index();
    public static final int INSEAMSIZECONCAT = AttributesEnum.InseamSizeConcat.index();
    public static final int SIZEQTY = AttributesEnum.SizeQty.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int SELSIZE = AttributesEnum.SelSize.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SizeLOVRowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TotalQty.
     * @return the TotalQty
     */
    public Number getTotalQty() {
        return (Number) getAttributeInternal(TOTALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalQty.
     * @param value value to set the  TotalQty
     */
    public void setTotalQty(Number value) {
        setAttributeInternal(TOTALQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute PrevProd.
     * @return the PrevProd
     */
    public Number getPrevProd() {
        return (Number) getAttributeInternal(PREVPROD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrevProd.
     * @param value value to set the  PrevProd
     */
    public void setPrevProd(Number value) {
        setAttributeInternal(PREVPROD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LineNo.
     * @return the LineNo
     */
    public String getLineNo() {
        return (String) getAttributeInternal(LINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LineNo.
     * @param value value to set the  LineNo
     */
    public void setLineNo(String value) {
        setAttributeInternal(LINENO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number) getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SystemId.
     * @param value value to set the  SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String) getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DivisionId.
     * @param value value to set the  DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute InseamSizeConcat.
     * @return the InseamSizeConcat
     */
    public String getInseamSizeConcat() {
        return (String) getAttributeInternal(INSEAMSIZECONCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InseamSizeConcat.
     * @param value value to set the  InseamSizeConcat
     */
    public void setInseamSizeConcat(String value) {
        setAttributeInternal(INSEAMSIZECONCAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Inseam.
     * @return the Inseam
     */
    public String getInseam() {
        return (String) getAttributeInternal(INSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inseam.
     * @param value value to set the  Inseam
     */
    public void setInseam(String value) {
        setAttributeInternal(INSEAM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SizeVal.
     * @return the SizeVal
     */
    public String getSizeVal() {
        return (String) getAttributeInternal(SIZEVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeVal.
     * @param value value to set the  SizeVal
     */
    public void setSizeVal(String value) {
        setAttributeInternal(SIZEVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SizeQty.
     * @return the SizeQty
     */
    public Number getSizeQty() {
        return (Number) getAttributeInternal(SIZEQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeQty.
     * @param value value to set the  SizeQty
     */
    public void setSizeQty(Number value) {
        setAttributeInternal(SIZEQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }


    /**
     * Gets the attribute value for the calculated attribute WashName.
     * @return the WashName
     */
    public String getWashName() {
        return (String) getAttributeInternal(WASHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WashName.
     * @param value value to set the  WashName
     */
    public void setWashName(String value) {
        setAttributeInternal(WASHNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BelQty.
     * @return the BelQty
     */
    public Number getBelQty() {
        return (Number) getAttributeInternal(BELQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BelQty.
     * @param value value to set the  BelQty
     */
    public void setBelQty(Number value) {
        setAttributeInternal(BELQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrevRejQty.
     * @return the PrevRejQty
     */
    public Number getPrevRejQty() {
        return (Number) getAttributeInternal(PREVREJQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrevRejQty.
     * @param value value to set the  PrevRejQty
     */
    public void setPrevRejQty(Number value) {
        setAttributeInternal(PREVREJQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Wipqty.
     * @return the Wipqty
     */
    public Number getWipqty() {
        return (Number) getAttributeInternal(WIPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wipqty.
     * @param value value to set the  Wipqty
     */
    public void setWipqty(Number value) {
        setAttributeInternal(WIPQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WipQty.
     * @return the WipQty
     */
    public Number getWipQty() {
        return (Number) getAttributeInternal(WIPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WipQty.
     * @param value value to set the  WipQty
     */
    public void setWipQty(Number value) {
        setAttributeInternal(WIPQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Flag.
     * @param value value to set the  Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelSize.
     * @return the SelSize
     */
    public String getSelSize() {
        return (String) getAttributeInternal(SELSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelSize.
     * @param value value to set the  SelSize
     */
    public void setSelSize(String value) {
        setAttributeInternal(SELSIZE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
