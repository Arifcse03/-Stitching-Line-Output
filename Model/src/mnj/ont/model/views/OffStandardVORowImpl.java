package mnj.ont.model.views;

import mnj.ont.model.entities.MnjMfgOutputOffStandardImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 13 12:23:45 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OffStandardVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ProdTransId {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getProdTransId();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setProdTransId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        StitchingLine {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getStitchingLine();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setStitchingLine((String)value);
            }
        }
        ,
        TotalStandad {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getTotalStandad();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setTotalStandad((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        OffStandardLineVO {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getOffStandardLineVO();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StitchLineLovVO1 {
            public Object get(OffStandardVORowImpl obj) {
                return obj.getStitchLineLovVO1();
            }

            public void put(OffStandardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OffStandardVORowImpl object);

        public abstract void put(OffStandardVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int PRODTRANSID = AttributesEnum.ProdTransId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int STITCHINGLINE = AttributesEnum.StitchingLine.index();
    public static final int TOTALSTANDAD = AttributesEnum.TotalStandad.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OFFSTANDARDLINEVO = AttributesEnum.OffStandardLineVO.index();
    public static final int STITCHLINELOVVO1 = AttributesEnum.StitchLineLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OffStandardVORowImpl() {
    }

    /**
     * Gets MnjMfgOutputOffStandard entity object.
     * @return the MnjMfgOutputOffStandard
     */
    public MnjMfgOutputOffStandardImpl getMnjMfgOutputOffStandard() {
        return (MnjMfgOutputOffStandardImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for PROD_TRANS_ID using the alias name ProdTransId.
     * @return the PROD_TRANS_ID
     */
    public Number getProdTransId() {
        return (Number) getAttributeInternal(PRODTRANSID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROD_TRANS_ID using the alias name ProdTransId.
     * @param value value to set the PROD_TRANS_ID
     */
    public void setProdTransId(Number value) {
        setAttributeInternal(PRODTRANSID, value);
    }

    /**
     * Gets the attribute value for HEADER_ID using the alias name HeaderId.
     * @return the HEADER_ID
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for HEADER_ID using the alias name HeaderId.
     * @param value value to set the HEADER_ID
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for STITCHING_LINE using the alias name StitchingLine.
     * @return the STITCHING_LINE
     */
    public String getStitchingLine() {
        return (String) getAttributeInternal(STITCHINGLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for STITCHING_LINE using the alias name StitchingLine.
     * @param value value to set the STITCHING_LINE
     */
    public void setStitchingLine(String value) {
        setAttributeInternal(STITCHINGLINE, value);
    }

    /**
     * Gets the attribute value for TOTAL_STANDAD using the alias name TotalStandad.
     * @return the TOTAL_STANDAD
     */
    public Number getTotalStandad() {
        return (Number) getAttributeInternal(TOTALSTANDAD);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_STANDAD using the alias name TotalStandad.
     * @param value value to set the TOTAL_STANDAD
     */
    public void setTotalStandad(Number value) {
        setAttributeInternal(TOTALSTANDAD, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OffStandardLineVO.
     */
    public RowIterator getOffStandardLineVO() {
        return (RowIterator)getAttributeInternal(OFFSTANDARDLINEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StitchLineLovVO1.
     */
    public RowSet getStitchLineLovVO1() {
        return (RowSet)getAttributeInternal(STITCHLINELOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
