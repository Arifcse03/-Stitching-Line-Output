package mnj.ont.model.services;

import java.sql.CallableStatement;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import javax.swing.text.Style;

import mnj.ont.model.lov.CodeDescreptionVOImpl;
import mnj.ont.model.lov.views.AdditionalPOPVOImpl;
import mnj.ont.model.lov.views.SizeLOVImpl;
import mnj.ont.model.services.common.InquiryInfoAM;


import mnj.ont.model.views.DetailVOImpl;
import mnj.ont.model.views.LineVOImpl;

import mnj.ont.model.views.OffStandardVOImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.domain.Number;


import oracle.jbo.server.ViewObjectImpl;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 04 16:13:00 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InquiryInfoAMImpl extends ApplicationModuleImpl implements InquiryInfoAM {
    /**
     * This is the default constructor (do not remove).
     */
    public InquiryInfoAMImpl() {
    }

    /**
     * Container's getter for HederVO1.
     * @return HederVO1
     */
    public ViewObjectImpl getHederVO1() {
        return (ViewObjectImpl)findViewObject("HederVO1");
    }


    public void FillLines() {
        System.out.println("FillLines enter ----------->");

        ViewObject vo = getFillBPOsCriteria1();


        RowSetIterator it = vo.createRowSetIterator("aa");
        String flag = null;

        while (it.hasNext()) {
            Row r = it.next();
            try {
                flag = r.getAttribute("Flag").toString();
                System.out.println("Flag -->"+flag);
                if (flag != null && flag.equals("Y"))
                    populateLines(r);
            } catch (Exception e) {
                ;
            }
            //populateLines(r);

        }

        it.closeRowSetIterator();


    } //findSelLines
    public void populateLines(Row poprow) {
            System.out.println("enter in populateLines -->");
            Row linerow = createLine();  
            ///linerow.setAttribute("BpoId",
                              //   getPopulateValue(poprow, "BpoId")); 
            linerow.setAttribute("SystemId",
                                 getPopulateValue(poprow, "SystemId")); 
            //linerow.setAttribute("BpoNo", getPopulateValue(poprow, "BpoNo"));
            linerow.setAttribute("SublineNo", getPopulateValue(poprow, "LineNo"));
            linerow.setAttribute("DivisionId", getPopulateValue(poprow, "OrgId"));
            linerow.setAttribute("JobId", getPopulateValue(poprow, "WipEntityId"));
            linerow.setAttribute("JobName", getPopulateValue(poprow, "WipEntityName"));
            linerow.setAttribute("TotalInput", getPopulateValue(poprow, "IssQuantity"));
            linerow.setAttribute("TotRejection", getPopulateValue(poprow, "TotRej"));
            linerow.setAttribute("Wip", getPopulateValue(poprow, "Wip"));
            linerow.setAttribute("TotalProduetion", getPopulateValue(poprow, "BelQty"));
            linerow.setAttribute("SamValue", getPopulateValue(poprow, "Sam"));
           /*linerow.setAttribute("BuyerId",
                                 getPopulateValue(poprow, "CustAccountId"));
            linerow.setAttribute("BuyerName",
                                 getPopulateValue(poprow, "KnownAs"));
            linerow.setAttribute("BpoNo", getPopulateValue(poprow, "BpoNo"));
            linerow.setAttribute("SaleOrderId",
                                 getPopulateValue(poprow, "HeaderId")); //DcpoNo
            linerow.setAttribute("Style", getPopulateValue(poprow, "StyleName"));
            linerow.setAttribute("Season",
                                 getPopulateValue(poprow, "Season"));
            linerow.setAttribute("StnNumber", getPopulateValue(poprow, "StnNo"));
            linerow.setAttribute("SublineNo", getPopulateValue(poprow, "LineNo"));
            linerow.setAttribute("JobId", getPopulateValue(poprow, "WipEntityId"));
            linerow.setAttribute("JobName", getPopulateValue(poprow, "WipEntityName"));
            linerow.setAttribute("DivisionId", getPopulateValue(poprow, "OrgId"));
            linerow.setAttribute("DivisionId", getPopulateValue(poprow, "OrgId"));//Color
            linerow.setAttribute("Color", getPopulateValue(poprow, "Colour"));
            linerow.setAttribute("Wash", getPopulateValue(poprow, "Wash"));
            linerow.setAttribute("TotalInput", getPopulateValue(poprow, "IssQuantity"));
            linerow.setAttribute("TotRejection", getPopulateValue(poprow, "TotRej"));
            linerow.setAttribute("Wip", getPopulateValue(poprow, "Wip"));
            linerow.setAttribute("TotalProduetion", getPopulateValue(poprow, "BelQty"));
            //linerow.setAttribute("Sam", getPopulateValue(poprow, "Sam"));
            linerow.setAttribute("SamValue", getPopulateValue(poprow, "Sam"));
*/

            
            System.out.println("enter in populateLines end-->");


        } //end of populateLines

        public Row createLine() {
            System.out.println("enter in createLine-->");
            ViewObject vo = getLineVO1();
            Row row = vo.createRow();
            vo.insertRow(row);
            row.setNewRowState(Row.STATUS_INITIALIZED);
            System.out.println("enter in createLine end-->");
            return row;
        } //end of createHeader


        public String getPopulateValue(Row r, String columnName) {

            String value = null;
            try {
                value = r.getAttribute(columnName).toString();
            } catch (Exception e) {
                ;
            }
            return value;
        }

    public String callPost(String headerId){
        
       System.out.println("Header Id ----------->"+headerId);
        String status =null;
        String stmt = 
            "BEGIN :1 := mnj_mfg_lineoutput_pkg.CALL_POST(:2, :3, :4, :5, :6); end;";

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            cs.setInt(2, Integer.parseInt(headerId));
            cs.setInt(3, 0);
            cs.setInt(4, 0);
            cs.setInt(5, 0);
            cs.setInt(6, 1110);
            cs.execute();
            status = cs.getString(1);
            cs.close();

        } catch (Exception e) {
            status= e.getMessage();
        }
        return status;

        
    }
    public String completion(String headerId, String respId ){
        
        ViewObject vo = getLineVO1();
        int LineId = Integer.parseInt(vo.getCurrentRow().getAttribute("OutSublineId").toString());
        System.out.println("LineId   "+LineId);
        
        String status =null;
        String stmt = 
            "BEGIN :1 := mnj_mfg_lineoutput_pkg.CALL_JOB_COMPLETION(:2, :3, :4, :5, :6); end;";

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            //cs.setInt(2, Integer.parseInt(headerId));
            cs.setInt(2,LineId);
            cs.setInt(3, 0);
            cs.setInt(4, 0);
            cs.setInt(5, 0);
            //cs.setInt(6, respId);
            cs.setString(6, respId);
            cs.execute();
            status = cs.getString(1);
            cs.close();

        }
        catch (Exception e) {
            status = e.getMessage();
        }
        System.out.println(headerId+"status--->"+status);
        return status;
        
              
    }


    /**
     * Container's getter for LineVO1.
     * @return LineVO1
     */
    public LineVOImpl getLineVO1() {
        return (LineVOImpl)findViewObject("LineVO1");
    }

    /**
     * Container's getter for MnjMfgSublineoutputFkLink1.
     * @return MnjMfgSublineoutputFkLink1
     */
    public ViewLinkImpl getMnjMfgSublineoutputFkLink1() {
        return (ViewLinkImpl)findViewLink("MnjMfgSublineoutputFkLink1");
    }

    /**
     * Container's getter for DetailVO1.
     * @return DetailVO1
     */
    public ViewObjectImpl getDetailVO1() {
        return (ViewObjectImpl)findViewObject("DetailVO1");
    }

    /**
     * Container's getter for LineDetail1.
     * @return LineDetail1
     */
    public ViewLinkImpl getLineDetail1() {
        return (ViewLinkImpl)findViewLink("LineDetail1");
    }

    /**
     * Container's getter for FillBPOsCriteria1.
     * @return FillBPOsCriteria1
     */
    public ViewObjectImpl getFillBPOsCriteria1() {
        return (ViewObjectImpl)findViewObject("FillBPOsCriteria1");
    }
    
    public void setSessionValues(String orgId, String userId, String respId,
                                 String respAppl) {
  
        

        if (userId != null) {
           //String flag = getFlagValue(userId, respId);
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession)ectx.getSession(false);
            //userSession.setAttribute("Flag", flag);
            userSession.setAttribute("userId", userId);
            userSession.setAttribute("orgId", orgId);
            userSession.setAttribute("respId", respId);
            userSession.setAttribute("unitName", getUnitName(orgId));
        }
    }


    public String getUnitName (String orgId){
        
        ViewObject vo = getoperatingUnitsVO1();
        vo.setWhereClause("ORGANIZATION_ID = "+orgId);
        vo.executeQuery();
        String name = null;
        vo.first();
        
        try {
            name = vo.getCurrentRow().getAttribute("Name").toString();
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        return name ;
            
    }

    /**
     * Container's getter for operatingUnitsVO1.
     * @return operatingUnitsVO1
     */
    public ViewObjectImpl getoperatingUnitsVO1() {
        return (ViewObjectImpl)findViewObject("operatingUnitsVO1");
    }


    /**
     * Container's getter for SizeLOV1.
     * @return SizeLOV1
     */
    public SizeLOVImpl getSizeLOV1() {
        return (SizeLOVImpl)findViewObject("SizeLOV1");
    }
    
    public void FillSizes() {

        ViewObject vo = getSizeLOV1();
        System.out.println("fil Size called ");

        RowSetIterator it = vo.createRowSetIterator("aa");
        String flag = null;

        while (it.hasNext()) {
            Row r = it.next();
            try {
                flag = r.getAttribute("SelSize").toString();
                System.out.println("Flag -->"+flag);
                if (flag != null && flag.equals("Y"))
                    popSizes(r);
            } catch (Exception e) {
                ;
            }
            //populateLines(r);

        }

        it.closeRowSetIterator();


    } //findSelLines
    
    public void popSizes(Row poprow) {

            Row linerow = createSizes();   
            
            System.out.println("Size value -->"+ getPopulateValue(poprow, "InseamSizeConcat"));
            
            linerow.setAttribute("SizeVal",
                                 getPopulateValue(poprow, "InseamSizeConcat"));//InseamSizeConcat
                                 linerow.setAttribute("Inseem",
                                                      getPopulateValue(poprow, "Inseam"));//InseamSizeConcat
//                                 linerow.setAttribute("Inseem",
//                                                       getPopulateValue(poprow, "Inseam"));
//         
            linerow.setAttribute("ProductionQuantity",
                                 getPopulateValue(poprow, "SizeQty"));
            
            linerow.setAttribute("TotalInput",
                                 getPopulateValue(poprow, "TotalQty"));
            
            linerow.setAttribute("PrevProdQty",
                                 getPopulateValue(poprow, "PrevProd"));
            
            linerow.setAttribute("TotalProduction",
                                 getPopulateValue(poprow, "BelQty"));
            
            linerow.setAttribute("TotalRejection",
                                 getPopulateValue(poprow, "PrevRejQty"));
            linerow.setAttribute("Wip",
                                 getPopulateValue(poprow, "WipQty"));
  
           
            
          


        } //end of populateLines
    
    

        public Row createSizes() {

            ViewObject vo = getDetailVO1();
            Row row = vo.createRow();
            vo.insertRow(row);
            row.setNewRowState(Row.STATUS_INITIALIZED);
            return row;
        } //end of createHeader
    
    
//            public void setSizeWherCaluseBPO(){
//           // System.out.println("Wher clause cut no -->"+getstyle());
//            
//            ViewObject vo = getSizeLOV1();
//        vo.setWhereClause("OC_NO='" + getstno() + "' and LINE_NO='" +
//                          getSLno() + "'");    
//        
//        
//        System.out.println("Wher clause cut no -->"+"OC_NO=" + getstno() + "and LINE_NO='" +
//                          getSLno() + "'");
//            
//            vo.executeQuery();
//    }
            public void setSizeWherCaluse(){
           // System.out.println("Wher clause cut no -->"+getstyle());
            
           ViewObject LineVo = getLineVO1();
           String SYSTEM_ID = LineVo.getCurrentRow().getAttribute("SystemId").toString();
          // String Style   = LineVo.getCurrentRow().getAttribute("Style").toString();
          // String Season  = LineVo.getCurrentRow().getAttribute("Season").toString();
            
            ViewObject vo = getSizeLOV1();
            
            
       /* vo.setWhereClause(
                          "OC_NO='"          + getstno() + 
                          "' and LINE_NO='"  + getSLno() + 
                          "' and BUYER_ID='" + BuyerId + 
                          "' and STYLE='"    + Style + 
                          "' and SEASON='"   + Season + 
                          "'"
                         );    */
            /////added by arif in 23 feb
       vo.setWhereClause(
                                 "LINE_NO='"  + getSLno() + 
                                 "' and SYSTEM_ID='" + SYSTEM_ID + 
                                 "'"
                                ); 
            
       
        
        
        System.out.println("Wher clause cut no -->" + 
                          "' and LINE_NO='"  + getSLno() + 
                          "' and SYSTEM_ID='" + SYSTEM_ID + 
                          "'");
            
            vo.executeQuery();
            System.out.println(vo.getQuery());
    }
//    public String getstyle(){
//    
//    ViewObject vo = getLineVO1();
//    String cutNo = null;
//    try {
//        cutNo = vo.getCurrentRow().getAttribute("Style").toString();
//    } catch (Exception e) {
//        // TODO: Add catch code
//        e.printStackTrace();
//    }
//    
//    return cutNo;
//    
//    }
    public String getstno(){
    
    ViewObject vo = getLineVO1();
    String stno = null;
    try {
        stno = vo.getCurrentRow().getAttribute("StnNumber").toString();
    } catch (Exception e) {
        // TODO: Add catch code
        e.printStackTrace();
    }
    
    return stno;
    
    }
   
    public String getSLno(){
    
    ViewObject vo = getLineVO1();
    String stno = null;
    try {
        stno = vo.getCurrentRow().getAttribute("SublineNo").toString();
    } catch (Exception e) {
        // TODO: Add catch code
        e.printStackTrace();
    }
    
    return stno;
    
    }
        
        
        public String getLineIdFromView(){
        
            String id = getLineVO1().getCurrentRow().getAttribute("OutSublineId").toString();
            return id ;
        }
        
        
//    public void setBPOWhereClause() {
//
//        String buyerId = null, style = null;
//        try {
//            buyerId =
//                    getHederVO1().getCurrentRow().getAttribute("BuyerId").toString();
//            style =
//                    getHederVO1().getCurrentRow().getAttribute("Style").toString();
//        } catch (Exception e) {
//            // TODO: Add catch code
//            e.printStackTrace();
//        }
//        //        System.out.println("Buyer Id ---" + buyerId);
//        //        System.out.println("Style name -->" + style);
//
//        ViewObject vo = getSizeLOV1();
//        vo.setWhereClause("CUSTOMER_ID=" + buyerId + " and STYLE_NAME='" +
//                          style + "'");
//        vo.executeQuery();
//
//
//    }
        
        /////////////////////GET TOTAL LINE NEW AM///
        public int sumtotalProduction(){
        System.out.println("enter sumtotalRejection  2 --->");
        ViewObject vo = getLineVO1();
            String headerId1 = vo.getCurrentRow().getAttribute("StnNumber").toString();
            System.out.println("get size value in AM Leavel new--->"+  headerId1);
        double total_pro = 0;
        String status=null;
        int result = 0;
        String stmt =
            "BEGIN :1 := MNJ_MFG_TOTAL_DAYPRODUCTION(:2); end;";
        

            CallableStatement cs = 
                getDBTransaction().createCallableStatement(stmt, 1);
            try {
                cs.registerOutParameter(1, OracleTypes.VARCHAR);
               // cs.setInt(2, Integer.parseInt(ProdTransId));
                cs.setString(2, headerId1);
                cs.execute();
                status = cs.getString(1);
                total_pro = cs.getDouble(1);
                cs.close();
                 // System.out.println("GET TOTAL LINE NEW AM get OutSublineId id--->"+ ProdTransId);
                    System.out.println("GET TOTAL LINE NEW AM get total_pro id--->"+ total_pro);
                    System.out.println("GET TOTAL LINE NEW AM get STN id--->"+ headerId1);
                            

                
                }
            catch (Exception e) {;
               }
        //try {
        //    cs.registerOutParameter(1, OracleTypes.NUMBER);
        //    cs.execute();
        //total_pro = cs.getDouble(1);
        
        System.out.println("total_pro  in new methoe am AT LINE STN" +
                                       total_pro);
        
        //result=cs.getInt(1);
        // cs.close();
        vo.getCurrentRow().setAttribute("TotalProduetion",
                                                   total_pro);

        // } catch (Exception e) {
        // }
        return result;

        
        }
        /////////////////////////
        /////////////////////GET TOTAL PRODUCTION LINE NEW AMIN WIP///
        public int sumtotalProductionWIPLINE(String ProdTransId){
        System.out.println("enter sumtotalRejection  2 --->");
        ViewObject vo = getLineVO1();
            String headerId1 = vo.getCurrentRow().getAttribute("StnNumber").toString();
            System.out.println("get size value in AM Leavel new--->"+  headerId1);
        double total_pro = 0;
        String status=null;
        int result = 0;
        String stmt =
            "BEGIN :1 := MNJ_MFG_WIP_LINE(:2, :3); end;";
        

            CallableStatement cs = 
                getDBTransaction().createCallableStatement(stmt, 1);
            try {
                cs.registerOutParameter(1, OracleTypes.VARCHAR);
                cs.setInt(2, Integer.parseInt(ProdTransId));
                cs.setString(3, headerId1);
                cs.execute();
                status = cs.getString(1);
                total_pro = cs.getDouble(1);
                cs.close();
                  System.out.println("GET TOTAL LINE NEW AM get WIP--->"+ ProdTransId);
                    System.out.println("GET TOTAL LINE NEW AM WIP --->"+ total_pro);
                    System.out.println("GET TOTAL LINE NEW AM get STN id WIP--->"+ headerId1);
                            

                
                }
            catch (Exception e) {;
               }
        System.out.println("total_pro  in new methoe am AT LINE STN" +
                                       total_pro);
        vo.getCurrentRow().setAttribute("Wip",
                                                   total_pro);

        // } catch (Exception e) {
        // }
        return result;

        
        }
    ///////////////////////////////////////////////////////
        //////////// WIP CALCULATION DETAIL /////////////
    public int sumtotalprodetailWIP(String OutSublineId){
    System.out.println("enter sumtotalRejection  2 --->");
    ViewObject vo = getDetailVO1();
        String headerId1 = vo.getCurrentRow().getAttribute("SizeVal").toString();
        System.out.println("get size value in AM Leavel new--->"+  headerId1);
    double total_pro = 0;
    String status=null;
    int result = 0;
    String stmt =
        "BEGIN :1 := MNJ_MFG_WIP_DETAIL(:2, :3); end;";
    

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            cs.setInt(2, Integer.parseInt(OutSublineId));
            cs.setString(3, headerId1);
            cs.execute();
            status = cs.getString(1);
            total_pro = cs.getDouble(1);
            cs.close();
              System.out.println("get OutSublineId id sumtotalprodetail--->"+ OutSublineId);
                System.out.println("get total_pro id sumtotalprodetail--->"+ total_pro);
               // System.out.println("get SizeVal id-sumtotalprodetail-->"+ SizeVal);
                        

            
            }
        catch (Exception e) {;
           }
    
    System.out.println("total_pro  in new methoe am" +
                                   total_pro);
    vo.getCurrentRow().setAttribute("Wip",
                                               total_pro);

  
    return result;

    }
        /////////////////////////
//            public int sumtotalProduction(){
//        System.out.println("enter sumtotalProduction  2 --->");
//        ViewObject vo = getLineVO1();
//        double total_pro = 0;
//        int result = 0;
//        String stmt = 
//            //MNJ_MFG_TOTAL_DAYPRODUCTION
//            "BEGIN :1 := getsumtotalQuantity(); end;";
//
//        CallableStatement cs = 
//            getDBTransaction().createCallableStatement(stmt, 1);
//        try {
//            cs.registerOutParameter(1, OracleTypes.NUMBER);
//            cs.execute();
//            total_pro = cs.getDouble(1);
//          
//            System.out.println("total_pro " +
//                                           total_pro);
//            
//        result=cs.getInt(1);
//            cs.close();
//            vo.getCurrentRow().setAttribute("TotalProduetion",
//                                                       total_pro);
//
//        } catch (Exception e) {
//        }
//        return result;
//
//        
//    }
// 
        
                /////////////////////GET TOTAL REGECTION LINE NEW AM///
        public int sumtotalRejection(){
        System.out.println("enter sumtotalRejection  2 --->");
        ViewObject vo = getLineVO1();
            String headerId1 = vo.getCurrentRow().getAttribute("StnNumber").toString();
            System.out.println("get size value in AM Leavel new--->"+  headerId1);
        double total_pro = 0;
        String status=null;
        int result = 0;
        String stmt =
            "BEGIN :1 := MNJ_MFG_TOTAL_DAY_REGECTION(:2); end;";
        

            CallableStatement cs = 
                getDBTransaction().createCallableStatement(stmt, 1);
            try {
                cs.registerOutParameter(1, OracleTypes.VARCHAR);
                //cs.setInt(2, Integer.parseInt(ProdTransId));
                cs.setString(2, headerId1);
                cs.execute();
                status = cs.getString(1);
                total_pro = cs.getDouble(1);
                cs.close();
                 // System.out.println("sumtotalRejection get OutSublineId id--->"+ ProdTransId);
                    System.out.println("sumtotalRejection get total_pro id--->"+ total_pro);
                    System.out.println("sumtotalRejection get STN id--->"+ headerId1);
                            

                
                }
            catch (Exception e) {;
               }
        //try {
        //    cs.registerOutParameter(1, OracleTypes.NUMBER);
        //    cs.execute();
        //total_pro = cs.getDouble(1);
        
        System.out.println("total_pro  in new methoe am AT LINE STN" +
                                       total_pro);
        
        //result=cs.getInt(1);
        // cs.close();
        vo.getCurrentRow().setAttribute("TotRejection",
                                                   total_pro);

        // } catch (Exception e) {
        // }
        return result;

        
        }
            
//    public int sumtotalRejection(){
//    System.out.println("enter sumtotalRejection  2 --->");
//    ViewObject vo = getLineVO1();
//    double total_pro = 0;
//    int result = 0;
//    String stmt =
//    "BEGIN :1 := getsumtotalRejection(); end;";
//
//    CallableStatement cs =
//    getDBTransaction().createCallableStatement(stmt, 1);
//    try {
//    cs.registerOutParameter(1, OracleTypes.NUMBER);
//    cs.execute();
//    total_pro = cs.getDouble(1);
//    
//    System.out.println("total_pro " +
//                                   total_pro);
//    
//    result=cs.getInt(1);
//    cs.close();
//    vo.getCurrentRow().setAttribute("TotRejection",
//                                               total_pro);
//
//    } catch (Exception e) {
//    }
//    return result;
//
//    
//    }
    ///////////////////////////////////////////////////////
    public int sumtotalprodetail(String OutSublineId){
    System.out.println("enter sumtotalRejection  2 --->");
    ViewObject vo = getDetailVO1();
        String headerId1 = vo.getCurrentRow().getAttribute("SizeVal").toString();
        System.out.println("get size value in AM Leavel new--->"+  headerId1);
    double total_pro = 0;
    String status=null;
    int result = 0;
    String stmt =
        "BEGIN :1 := MNJ_GET_TOTAL_DAY_PROD_LINE(:2, :3); end;";
  

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            cs.setInt(2, Integer.parseInt(OutSublineId));
            cs.setString(3, headerId1);
            cs.execute();
            status = cs.getString(1);
            total_pro = cs.getDouble(1);
            cs.close();
              System.out.println("get OutSublineId id sumtotalprodetail--->"+ OutSublineId);
                System.out.println("get total_pro id sumtotalprodetail--->"+ total_pro);
               // System.out.println("get SizeVal id-sumtotalprodetail-->"+ SizeVal);
                        

            
            }
        catch (Exception e) {;
           }
    //try {
//    cs.registerOutParameter(1, OracleTypes.NUMBER);
//    cs.execute();
    //total_pro = cs.getDouble(1);
    
    System.out.println("total_pro  in new methoe am" +
                                   total_pro);
    
    //result=cs.getInt(1);
   // cs.close();
    vo.getCurrentRow().setAttribute("TotalProduction",
                                               total_pro);

   // } catch (Exception e) {
   // }
    return result;

    
    }
    /////////////////////////////////////////////////////
//    public int sumtotalRejectiondetail(){
//    System.out.println("enter sumtotalRejection  2 --->");
//    ViewObject vo = getDetailVO1();
//    double total_pro = 0;
//    int result = 0;
//    String stmt =
//    "BEGIN :1 := getsumtotaldayRegectionDetail(); end;";
//
//    CallableStatement cs =
//    getDBTransaction().createCallableStatement(stmt, 1);
//    try {
//    cs.registerOutParameter(1, OracleTypes.NUMBER);
//    cs.execute();
//    total_pro = cs.getDouble(1);
//    
//    System.out.println("total_pro " +
//                                   total_pro);
//    
//    result=cs.getInt(1);
//    cs.close();
//    vo.getCurrentRow().setAttribute("TotalRejection",
//                                               total_pro);
//
//    } catch (Exception e) {
//    }
//    return result;
//
//    
//    }
    public int sumtotalRejectiondetail(String OutSublineId ){
    System.out.println("enter sumtotalRejection  2 --->");
    ViewObject vo = getDetailVO1();
        String headerId1 = vo.getCurrentRow().getAttribute("SizeVal").toString();
        System.out.println("get size value in AM Leavel new--->"+  headerId1);
    double total_pro = 0;
    String status=null;
    int result = 0;
    String stmt =
        "BEGIN :1 := getsumtotaldayRegectionDetail(:2, :3); end;";
    

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            cs.setInt(2, Integer.parseInt(OutSublineId));
            cs.setString(3, headerId1);
            cs.execute();
            status = cs.getString(1);
            total_pro = cs.getDouble(1);
            cs.close();
              System.out.println("get OutSublineId id sumtotalRejectiondetail--->"+ OutSublineId);
                System.out.println("get total_pro id sumtotalRejectiondetail--->"+ total_pro);
                //System.out.println("get SizeVal id sumtotalRejectiondetail--->"+ SizeVal);
                        

            
            }
        catch (Exception e) {;
           }
    //try {
    //    cs.registerOutParameter(1, OracleTypes.NUMBER);
    //    cs.execute();
    //total_pro = cs.getDouble(1);
    
    System.out.println("total_pro  in new methoe am" +
                                   total_pro);
    
    //result=cs.getInt(1);
    // cs.close();
    vo.getCurrentRow().setAttribute("TotalRejection",
                                               total_pro);

    // } catch (Exception e) {
    // }
    return result;

    
    }
    /////////////////////////////////////////////////////
    public String CalculateTotalProductionNewLINE(String headerId){
        System.out.println("enter in AM LEAVEL -->");
        String vResult=null;
        String status =null;
        String HeaderId = getHeaderId();
        System.out.println(headerId+" New--->"+HeaderId);
        String stmt = 
            "BEGIN CALL_CALCULATION(:1,:2); end;";

        CallableStatement cs = 
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(2, OracleTypes.VARCHAR);
           cs.setInt(1, Integer.parseInt(HeaderId));
            cs.execute();
            vResult=cs.getString(2);
            cs.close();
            System.out.println("CALL PROCEDUR IN AM LEAVEL -->"+vResult);
        }
        catch (Exception e) {
            status = e.getMessage();
        }
        System.out.println(headerId+"status--->"+status);
        
        ExecuteBlock();
        
        return vResult;
        
              
    } 
    public String getHeaderId(){
        String v = null;
        
    ViewObject findViewObject = getHederVO1();
    v=findViewObject.getCurrentRow().getAttribute("ProdTransId").toString();
    return v;
    }
    public void ExecuteBlock(){

            
            ViewObject findViewObject1 = getDetailVO1();  
                findViewObject1.executeQuery();
        System.out.println("Level 9 ExecuteBlock");
            
            ViewObject findViewObject = getLineVO1();  
                findViewObject.executeQuery();
        System.out.println("Level 7 ExecuteBlock");
        
        }


    /**
     * Container's getter for AdditionBlockVO1.
     * @return AdditionBlockVO1
     */
    public ViewObjectImpl getAdditionBlockVO1() {
        return (ViewObjectImpl)findViewObject("AdditionBlockVO1");
    }

    /**
     * Container's getter for HeaderAdditionVL1.
     * @return HeaderAdditionVL1
     */
    public ViewLinkImpl getHeaderAdditionVL1() {
        return (ViewLinkImpl)findViewLink("HeaderAdditionVL1");
    }
    
    
    
    /////////////////////////////// POPUP NEW/////////////////////////
    public void setSizeWherCaluseNew(){
            System.out.println("Where clause Style -->"+getHeader_id());
            
            ViewObject vo = getAdditionalPOPVO1();
            vo.setWhereClause("PROD_TRANS_ID = "+getHeader_id());
        System.out.println("Where clause Style HEADER_ID -->"+getHeader_id());
            vo.executeQuery();
    }
    public String getHeader_id(){
        
        ViewObject vo = getHederVO1();
        String cutNo1 = null;
        try {
            cutNo1 = vo.getCurrentRow().getAttribute("ProdTransId").toString();
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        
        return cutNo1;
        
    }

    
    
    
    
    public void FillLinesNEW() {
        System.out.println("FillLines enter ----------->");

        ViewObject vo = getAdditionalPOPVO1();


        RowSetIterator it = vo.createRowSetIterator("aa");
        String flag = null;

        while (it.hasNext()) {
            Row r = it.next();
            try {
                flag = r.getAttribute("FlagNEW").toString();
                System.out.println("FlagNEW -->"+flag);
                if (flag != null && flag.equals("Y"))
                    populateLinesNEW(r);
            } catch (Exception e) {
                ;
            }
            //populateLines(r);

        }

        it.closeRowSetIterator();


    } //findSelLines
    public void populateLinesNEW(Row poprow) {
            System.out.println("enter in populateLines -->");
            Row linerow = createLineNEW();
            linerow.setAttribute("Style",
                                 getPopulateValue(poprow, "Style"));
            linerow.setAttribute("BuyerId1",
                                 getPopulateValue(poprow, "BuyerId"));
            linerow.setAttribute("DivisionId",
                                 getPopulateValue(poprow, "DivisionId"));
            linerow.setAttribute("Attribute9",
                                 getPopulateValue(poprow, "BuyerName"));
            linerow.setAttribute("Season",
                                 getPopulateValue(poprow, "Season"));
            System.out.println("enter in populateLines SEASON -->"+getPopulateValue(poprow, "Season"));
            linerow.setAttribute("Color",
                                 getPopulateValue(poprow, "Color"));
            linerow.setAttribute("Wash",
                                 getPopulateValue(poprow, "Wash"));
            
            System.out.println("enter in populateLines COLOR -->"+getPopulateValue(poprow, "Color"));
            linerow.setAttribute("SublineNo",
                                 getPopulateValue(poprow, "SublineNo"));
            System.out.println("enter in populateLines SublineNo -->"+getPopulateValue(poprow, "SublineNo"));
         
//            linerow.setAttribute("BuyerName",
//                                 getPopulateValue(poprow, "BuyerName"));
//            System.out.println("enter in populateLines BuyerName-->"+getPopulateValue(poprow, "BuyerName"));
//
//            linerow.setAttribute("Style",
//                                 getPopulateValue(poprow, "Style"));
//            linerow.setAttribute("Season",
//                                 getPopulateValue(poprow, "Season"));
//            linerow.setAttribute("Color",
//                                 getPopulateValue(poprow, "Color"));
           
            System.out.println("enter in populateLines end-->");


        } //end of populateLines

        public Row createLineNEW() {
            System.out.println("enter in createLine-->");
            ViewObject vo = getAdditionBlockVO1();
            Row row = vo.createRow();
            vo.insertRow(row);
            row.setNewRowState(Row.STATUS_INITIALIZED);
            System.out.println("enter in createLine end-->");
            return row;
        } //end of createHeader
    
    //////////////////////////////////
    public void selectAllLines(String FlagNEWTab) {

        System.out.println("ENTER AM select all line ---->");
        ViewObject populatevo = getCodeDescreptionVO1();
        //populatevo.executeQuery();

        Row[] r = populatevo.getAllRowsInRange();

        for (Row row : r) {
            System.out.println("Loop select");
            row.setAttribute("FlagNEWTab", FlagNEWTab);
           // System.out.println("Get select ---->" + row.getAttribute("Flag"));

        }
    }
        
    public void FillLinesNEWTab() {
        System.out.println("FillLines enter ----------->");

        ViewObject vo = getCodeDescreptionVO1();


        RowSetIterator it = vo.createRowSetIterator("aa");
        String flag = null;

        while (it.hasNext()) {
            Row r = it.next();
            try {
                flag = r.getAttribute("FlagNEWTab").toString();
                System.out.println("FlagNEWTab -->"+flag);
                if (flag != null && flag.equals("Y"))
                    populateLinesNEWTab(r);
            } catch (Exception e) {
                ;
            }
            //populateLines(r);

        }

        it.closeRowSetIterator();


    } //findSelLines
    
    public Row createLineNEWTab() {
        System.out.println("enter in createLine nwe tab-->");
        ViewObject vo = getOffStandardLineVO1();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        System.out.println("enter in createLine new tab end-->");
        return row;
    } //end of createHeader
    
    public void populateLinesNEWTab(Row poprow) {
            System.out.println("enter in populateLines -->");
            Row linerow = createLineNEWTab();
           
            linerow.setAttribute("Descreption",
                                 getPopulateValue(poprow, "Description"));
           
            System.out.println("enter in populateLines end-->");
            linerow.setAttribute("CodeStandard",
                                 getPopulateValue(poprow, "FlexValue"));
            System.out.println("enter in populateLines FlexValue -->"+getPopulateValue(poprow, "FlexValue"));

        } //end of populateLines

//        public Row createOFFStandadr() {
//
//            ViewObject vo = getOffStandardLineVO1();
//            Row row = vo.createRow();
//            vo.insertRow(row);
//            row.setNewRowState(Row.STATUS_INITIALIZED);
//            return row;
//        } //end of createHeader

   
    //////////////////////////////////
    public double GET_TOTAL_MINUTS(int p_header_id) {
       
        System.out.println("GET_TOTAL_SAM AM Level 1");
        String status = null;
        double sam=0;
        String stmt =
        "BEGIN :1 := MNJ_MFG_TOT_PRO_MIN_STITCH(:2); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, oracle.jdbc.OracleTypes.NUMBER);
            cs.setInt(2, p_header_id);
            cs.execute();
            sam = cs.getDouble(1);
            cs.close();
            System.out.println("GET_TOTAL_SAM AM Level 2"+sam);
            System.out.println("GET_TOTAL_SAM AM Level 3"+cs);
        } catch (Exception e) {
            status = e.getMessage();
        }
        

        return sam;
    }
    ///////////////////////////////////
//    public double GET_TOTAL_MINUTS(int p_header_id) {
//     
//        System.out.println("enter in AM GET_TOTAL_MINUTS -->");
//        String status = null;
//        double sam=0.0;
//        String stmt =
//        "BEGIN :1 := MNJ_MFG_TOT_PRO_MIN_STITCH(:2); end;";
//        java.sql.CallableStatement cs =
//            getDBTransaction().createCallableStatement(stmt, 1);
//        try {
//            cs.registerOutParameter(1, oracle.jdbc.OracleTypes.NUMBER);
//            cs.setInt(2, p_header_id);
//            cs.execute();
//            sam = cs.getDouble(1);
//            cs.close();
//            System.out.println("enter in AM GET_TOTAL_MINUTS 2 -->"+sam);
//            System.out.println("enter in AM GET_TOTAL_MINUTS 3 -->"+cs);
//            
//        } catch (Exception e) {
//            status = e.getMessage();
//        }
//        
//
//        return sam;
//    }


    /**
     * Container's getter for AdditionalPOPVO1.
     * @return AdditionalPOPVO1
     */
    public AdditionalPOPVOImpl getAdditionalPOPVO1() {
        return (AdditionalPOPVOImpl)findViewObject("AdditionalPOPVO1");
    }

    /**
     * Container's getter for OffStandardVO1.
     * @return OffStandardVO1
     */
    public ViewObjectImpl getOffStandardVO1() {
        return (ViewObjectImpl)findViewObject("OffStandardVO1");
    }

    /**
     * Container's getter for MnjMfgOutputOffStandardFkLink1.
     * @return MnjMfgOutputOffStandardFkLink1
     */
    public ViewLinkImpl getMnjMfgOutputOffStandardFkLink1() {
        return (ViewLinkImpl)findViewLink("MnjMfgOutputOffStandardFkLink1");
    }

    /**
     * Container's getter for OffStandardLineVO1.
     * @return OffStandardLineVO1
     */
    public ViewObjectImpl getOffStandardLineVO1() {
        return (ViewObjectImpl)findViewObject("OffStandardLineVO1");
    }

    /**
     * Container's getter for MnjMfgOutputOffStandLFkLink1.
     * @return MnjMfgOutputOffStandLFkLink1
     */
    public ViewLinkImpl getMnjMfgOutputOffStandLFkLink1() {
        return (ViewLinkImpl)findViewLink("MnjMfgOutputOffStandLFkLink1");
    }

    /**
     * Container's getter for CodeDescreptionVO1.
     * @return CodeDescreptionVO1
     */
    public CodeDescreptionVOImpl getCodeDescreptionVO1() {
        return (CodeDescreptionVOImpl)findViewObject("CodeDescreptionVO1");
    }

    /**
     * Container's getter for Sam_LOV1.
     * @return Sam_LOV1
     */
    public ViewObjectImpl getSam_LOV1() {
        return (ViewObjectImpl)findViewObject("Sam_LOV1");
    }
}
