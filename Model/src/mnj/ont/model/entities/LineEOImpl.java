package mnj.ont.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 08 13:24:42 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LineEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    public void postChanges(TransactionEvent e) {
    /* If current entity is new or modified */
    if (getPostState() == STATUS_NEW ||
       getPostState() == STATUS_MODIFIED) {
     /* Get the associated product for the service request */
     HederEOImpl header = getHederEO();

     /* If there is an associated product */
     if (header != null) {
       /* And if it's post-status is NEW */
       if (header.getPostState() == STATUS_NEW) {
         /*
          * Post the product first, before posting this
          * entity by calling super below
          */
         header.postChanges(e);
       }
     }
    }
    super.postChanges(e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(LineEOImpl obj) {
                return obj.getDivisionId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        ProdTransId {
            public Object get(LineEOImpl obj) {
                return obj.getProdTransId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setProdTransId((Number)value);
            }
        }
        ,
        OutSublineId {
            public Object get(LineEOImpl obj) {
                return obj.getOutSublineId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setOutSublineId((Number)value);
            }
        }
        ,
        Sno {
            public Object get(LineEOImpl obj) {
                return obj.getSno();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSno((Number)value);
            }
        }
        ,
        LineId {
            public Object get(LineEOImpl obj) {
                return obj.getLineId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLineId((String)value);
            }
        }
        ,
        SublineType {
            public Object get(LineEOImpl obj) {
                return obj.getSublineType();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSublineType((String)value);
            }
        }
        ,
        NoMachines {
            public Object get(LineEOImpl obj) {
                return obj.getNoMachines();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setNoMachines((Number)value);
            }
        }
        ,
        SublineNo {
            public Object get(LineEOImpl obj) {
                return obj.getSublineNo();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSublineNo((String)value);
            }
        }
        ,
        OperatorAbs {
            public Object get(LineEOImpl obj) {
                return obj.getOperatorAbs();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setOperatorAbs((Number)value);
            }
        }
        ,
        LineOutput {
            public Object get(LineEOImpl obj) {
                return obj.getLineOutput();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLineOutput((Number)value);
            }
        }
        ,
        TargetQty {
            public Object get(LineEOImpl obj) {
                return obj.getTargetQty();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTargetQty((Number)value);
            }
        }
        ,
        BalanceQty {
            public Object get(LineEOImpl obj) {
                return obj.getBalanceQty();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setBalanceQty((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(LineEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(LineEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(LineEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        TempQty {
            public Object get(LineEOImpl obj) {
                return obj.getTempQty();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTempQty((Number)value);
            }
        }
        ,
        ResPost {
            public Object get(LineEOImpl obj) {
                return obj.getResPost();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setResPost((String)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ,
        SizeQuantity {
            public Object get(LineEOImpl obj) {
                return obj.getSizeQuantity();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSizeQuantity((Number)value);
            }
        }
        ,
        ProductionQuantity {
            public Object get(LineEOImpl obj) {
                return obj.getProductionQuantity();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setProductionQuantity((String)value);
            }
        }
        ,
        ProdQty {
            public Object get(LineEOImpl obj) {
                return obj.getProdQty();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setProdQty((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(LineEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(LineEOImpl obj) {
                return obj.getSeason();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(LineEOImpl obj) {
                return obj.getStyle();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Color {
            public Object get(LineEOImpl obj) {
                return obj.getColor();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        BpoNo {
            public Object get(LineEOImpl obj) {
                return obj.getBpoNo();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setBpoNo((String)value);
            }
        }
        ,
        StnNo {
            public Object get(LineEOImpl obj) {
                return obj.getStnNo();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setStnNo((String)value);
            }
        }
        ,
        SaleOrderId {
            public Object get(LineEOImpl obj) {
                return obj.getSaleOrderId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSaleOrderId((Number)value);
            }
        }
        ,
        ProdType {
            public Object get(LineEOImpl obj) {
                return obj.getProdType();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setProdType((String)value);
            }
        }
        ,
        TotRejection {
            public Object get(LineEOImpl obj) {
                return obj.getTotRejection();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTotRejection((Number)value);
            }
        }
        ,
        DayRejection {
            public Object get(LineEOImpl obj) {
                return obj.getDayRejection();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setDayRejection((Number)value);
            }
        }
        ,
        StnNumber {
            public Object get(LineEOImpl obj) {
                return obj.getStnNumber();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setStnNumber((String)value);
            }
        }
        ,
        JobId {
            public Object get(LineEOImpl obj) {
                return obj.getJobId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setJobId((Number)value);
            }
        }
        ,
        ErrorMessage {
            public Object get(LineEOImpl obj) {
                return obj.getErrorMessage();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setErrorMessage((String)value);
            }
        }
        ,
        LastAction {
            public Object get(LineEOImpl obj) {
                return obj.getLastAction();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastAction((String)value);
            }
        }
        ,
        TotalInput {
            public Object get(LineEOImpl obj) {
                return obj.getTotalInput();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTotalInput((Number)value);
            }
        }
        ,
        DayProduction {
            public Object get(LineEOImpl obj) {
                return obj.getDayProduction();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setDayProduction((Number)value);
            }
        }
        ,
        TotalProduetion {
            public Object get(LineEOImpl obj) {
                return obj.getTotalProduetion();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTotalProduetion((Number)value);
            }
        }
        ,
        Wip {
            public Object get(LineEOImpl obj) {
                return obj.getWip();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setWip((Number)value);
            }
        }
        ,
        PreLineoutput {
            public Object get(LineEOImpl obj) {
                return obj.getPreLineoutput();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setPreLineoutput((Number)value);
            }
        }
        ,
        Sam {
            public Object get(LineEOImpl obj) {
                return obj.getSam();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSam((Number)value);
            }
        }
        ,
        SamValue {
            public Object get(LineEOImpl obj) {
                return obj.getSamValue();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSamValue((Number)value);
            }
        }
        ,
        Wash {
            public Object get(LineEOImpl obj) {
                return obj.getWash();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setWash((String)value);
            }
        }
        ,
        ProducedMin {
            public Object get(LineEOImpl obj) {
                return obj.getProducedMin();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setProducedMin((Number)value);
            }
        }
        ,
        BpoId {
            public Object get(LineEOImpl obj) {
                return obj.getBpoId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setBpoId((Number)value);
            }
        }
        ,
        SystemId {
            public Object get(LineEOImpl obj) {
                return obj.getSystemId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        HederEO {
            public Object get(LineEOImpl obj) {
                return obj.getHederEO();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setHederEO((HederEOImpl)value);
            }
        }
        ,
        DetailEO {
            public Object get(LineEOImpl obj) {
                return obj.getDetailEO();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setDetailEO((DetailEOImpl)value);
            }
        }
        ,
        DetailEO1 {
            public Object get(LineEOImpl obj) {
                return obj.getDetailEO1();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DetailEO2 {
            public Object get(LineEOImpl obj) {
                return obj.getDetailEO2();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LineEOImpl object);

        public abstract void put(LineEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int PRODTRANSID = AttributesEnum.ProdTransId.index();
    public static final int OUTSUBLINEID = AttributesEnum.OutSublineId.index();
    public static final int SNO = AttributesEnum.Sno.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int SUBLINETYPE = AttributesEnum.SublineType.index();
    public static final int NOMACHINES = AttributesEnum.NoMachines.index();
    public static final int SUBLINENO = AttributesEnum.SublineNo.index();
    public static final int OPERATORABS = AttributesEnum.OperatorAbs.index();
    public static final int LINEOUTPUT = AttributesEnum.LineOutput.index();
    public static final int TARGETQTY = AttributesEnum.TargetQty.index();
    public static final int BALANCEQTY = AttributesEnum.BalanceQty.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int TEMPQTY = AttributesEnum.TempQty.index();
    public static final int RESPOST = AttributesEnum.ResPost.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int SIZEQUANTITY = AttributesEnum.SizeQuantity.index();
    public static final int PRODUCTIONQUANTITY = AttributesEnum.ProductionQuantity.index();
    public static final int PRODQTY = AttributesEnum.ProdQty.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int BPONO = AttributesEnum.BpoNo.index();
    public static final int STNNO = AttributesEnum.StnNo.index();
    public static final int SALEORDERID = AttributesEnum.SaleOrderId.index();
    public static final int PRODTYPE = AttributesEnum.ProdType.index();
    public static final int TOTREJECTION = AttributesEnum.TotRejection.index();
    public static final int DAYREJECTION = AttributesEnum.DayRejection.index();
    public static final int STNNUMBER = AttributesEnum.StnNumber.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int ERRORMESSAGE = AttributesEnum.ErrorMessage.index();
    public static final int LASTACTION = AttributesEnum.LastAction.index();
    public static final int TOTALINPUT = AttributesEnum.TotalInput.index();
    public static final int DAYPRODUCTION = AttributesEnum.DayProduction.index();
    public static final int TOTALPRODUETION = AttributesEnum.TotalProduetion.index();
    public static final int WIP = AttributesEnum.Wip.index();
    public static final int PRELINEOUTPUT = AttributesEnum.PreLineoutput.index();
    public static final int SAM = AttributesEnum.Sam.index();
    public static final int SAMVALUE = AttributesEnum.SamValue.index();
    public static final int WASH = AttributesEnum.Wash.index();
    public static final int PRODUCEDMIN = AttributesEnum.ProducedMin.index();
    public static final int BPOID = AttributesEnum.BpoId.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int HEDEREO = AttributesEnum.HederEO.index();
    public static final int DETAILEO = AttributesEnum.DetailEO.index();
    public static final int DETAILEO1 = AttributesEnum.DetailEO1.index();
    public static final int DETAILEO2 = AttributesEnum.DetailEO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LineEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.LineEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for ProdTransId, using the alias name ProdTransId.
     * @return the ProdTransId
     */
    public Number getProdTransId() {
        return (Number)getAttributeInternal(PRODTRANSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdTransId.
     * @param value value to set the ProdTransId
     */
    public void setProdTransId(Number value) {
        setAttributeInternal(PRODTRANSID, value);
    }

    /**
     * Gets the attribute value for OutSublineId, using the alias name OutSublineId.
     * @return the OutSublineId
     */
    public Number getOutSublineId() {
        return (Number)getAttributeInternal(OUTSUBLINEID);
    }


    /**
     * Sets <code>value</code> as the attribute value for OutSublineId.
     * @param value value to set the OutSublineId
     */
    public void setOutSublineId(Number value) {
        setAttributeInternal(OUTSUBLINEID, value);
    }

    /**
     * Gets the attribute value for Sno, using the alias name Sno.
     * @return the Sno
     */
    public Number getSno() {
        return (Number)getAttributeInternal(SNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sno.
     * @param value value to set the Sno
     */
    public void setSno(Number value) {
        setAttributeInternal(SNO, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public String getLineId() {
        return (String)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(String value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for SublineType, using the alias name SublineType.
     * @return the SublineType
     */
    public String getSublineType() {
        return (String)getAttributeInternal(SUBLINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SublineType.
     * @param value value to set the SublineType
     */
    public void setSublineType(String value) {
        setAttributeInternal(SUBLINETYPE, value);
    }

    /**
     * Gets the attribute value for NoMachines, using the alias name NoMachines.
     * @return the NoMachines
     */
    public Number getNoMachines() {
        return (Number)getAttributeInternal(NOMACHINES);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoMachines.
     * @param value value to set the NoMachines
     */
    public void setNoMachines(Number value) {
        setAttributeInternal(NOMACHINES, value);
    }

    /**
     * Gets the attribute value for SublineNo, using the alias name SublineNo.
     * @return the SublineNo
     */
    public String getSublineNo() {
        return (String)getAttributeInternal(SUBLINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SublineNo.
     * @param value value to set the SublineNo
     */
    public void setSublineNo(String value) {
        setAttributeInternal(SUBLINENO, value);
    }

    /**
     * Gets the attribute value for OperatorAbs, using the alias name OperatorAbs.
     * @return the OperatorAbs
     */
    public Number getOperatorAbs() {
        return (Number)getAttributeInternal(OPERATORABS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorAbs.
     * @param value value to set the OperatorAbs
     */
    public void setOperatorAbs(Number value) {
        setAttributeInternal(OPERATORABS, value);
    }

    /**
     * Gets the attribute value for LineOutput, using the alias name LineOutput.
     * @return the LineOutput
     */
    public Number getLineOutput() {
        return (Number)getAttributeInternal(LINEOUTPUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineOutput.
     * @param value value to set the LineOutput
     */
    public void setLineOutput(Number value) {
        setAttributeInternal(LINEOUTPUT, value);
    }

    /**
     * Gets the attribute value for TargetQty, using the alias name TargetQty.
     * @return the TargetQty
     */
    public Number getTargetQty() {
        return (Number)getAttributeInternal(TARGETQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetQty.
     * @param value value to set the TargetQty
     */
    public void setTargetQty(Number value) {
        setAttributeInternal(TARGETQTY, value);
    }

    /**
     * Gets the attribute value for BalanceQty, using the alias name BalanceQty.
     * @return the BalanceQty
     */
    public Number getBalanceQty() {
        return (Number)getAttributeInternal(BALANCEQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BalanceQty.
     * @param value value to set the BalanceQty
     */
    public void setBalanceQty(Number value) {
        setAttributeInternal(BALANCEQTY, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for TempQty, using the alias name TempQty.
     * @return the TempQty
     */
    public Number getTempQty() {
        return (Number)getAttributeInternal(TEMPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TempQty.
     * @param value value to set the TempQty
     */
    public void setTempQty(Number value) {
        setAttributeInternal(TEMPQTY, value);
    }

    /**
     * Gets the attribute value for ResPost, using the alias name ResPost.
     * @return the ResPost
     */
    public String getResPost() {
        return (String)getAttributeInternal(RESPOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResPost.
     * @param value value to set the ResPost
     */
    public void setResPost(String value) {
        setAttributeInternal(RESPOST, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for SizeQuantity, using the alias name SizeQuantity.
     * @return the SizeQuantity
     */
    public Number getSizeQuantity() {
        return (Number)getAttributeInternal(SIZEQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeQuantity.
     * @param value value to set the SizeQuantity
     */
    public void setSizeQuantity(Number value) {
        setAttributeInternal(SIZEQUANTITY, value);
    }

    /**
     * Gets the attribute value for ProductionQuantity, using the alias name ProductionQuantity.
     * @return the ProductionQuantity
     */
    public String getProductionQuantity() {
        return (String)getAttributeInternal(PRODUCTIONQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductionQuantity.
     * @param value value to set the ProductionQuantity
     */
    public void setProductionQuantity(String value) {
        setAttributeInternal(PRODUCTIONQUANTITY, value);
    }

    /**
     * Gets the attribute value for ProdQty, using the alias name ProdQty.
     * @return the ProdQty
     */
    public String getProdQty() {
        return (String)getAttributeInternal(PRODQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdQty.
     * @param value value to set the ProdQty
     */
    public void setProdQty(String value) {
        setAttributeInternal(PRODQTY, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for BpoNo, using the alias name BpoNo.
     * @return the BpoNo
     */
    public String getBpoNo() {
        return (String)getAttributeInternal(BPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoNo.
     * @param value value to set the BpoNo
     */
    public void setBpoNo(String value) {
        setAttributeInternal(BPONO, value);
    }

    /**
     * Gets the attribute value for StnNo, using the alias name StnNo.
     * @return the StnNo
     */
    public String getStnNo() {
        return (String)getAttributeInternal(STNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StnNo.
     * @param value value to set the StnNo
     */
    public void setStnNo(String value) {
        setAttributeInternal(STNNO, value);
    }

    /**
     * Gets the attribute value for SaleOrderId, using the alias name SaleOrderId.
     * @return the SaleOrderId
     */
    public Number getSaleOrderId() {
        return (Number)getAttributeInternal(SALEORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleOrderId.
     * @param value value to set the SaleOrderId
     */
    public void setSaleOrderId(Number value) {
        setAttributeInternal(SALEORDERID, value);
    }

    /**
     * Gets the attribute value for ProdType, using the alias name ProdType.
     * @return the ProdType
     */
    public String getProdType() {
        return (String)getAttributeInternal(PRODTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdType.
     * @param value value to set the ProdType
     */
    public void setProdType(String value) {
        setAttributeInternal(PRODTYPE, value);
    }

    /**
     * Gets the attribute value for TotRejection, using the alias name TotRejection.
     * @return the TotRejection
     */
    public Number getTotRejection() {
        return (Number)getAttributeInternal(TOTREJECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotRejection.
     * @param value value to set the TotRejection
     */
    public void setTotRejection(Number value) {
        setAttributeInternal(TOTREJECTION, value);
    }

    /**
     * Gets the attribute value for DayRejection, using the alias name DayRejection.
     * @return the DayRejection
     */
    public Number getDayRejection() {
        return (Number)getAttributeInternal(DAYREJECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for DayRejection.
     * @param value value to set the DayRejection
     */
    public void setDayRejection(Number value) {
        setAttributeInternal(DAYREJECTION, value);
    }

    /**
     * Gets the attribute value for StnNumber, using the alias name StnNumber.
     * @return the StnNumber
     */
    public String getStnNumber() {
        return (String)getAttributeInternal(STNNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for StnNumber.
     * @param value value to set the StnNumber
     */
    public void setStnNumber(String value) {
        setAttributeInternal(STNNUMBER, value);
    }

    /**
     * Gets the attribute value for JobId, using the alias name JobId.
     * @return the JobId
     */
    public Number getJobId() {
        return (Number)getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobId.
     * @param value value to set the JobId
     */
    public void setJobId(Number value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for ErrorMessage, using the alias name ErrorMessage.
     * @return the ErrorMessage
     */
    public String getErrorMessage() {
        return (String)getAttributeInternal(ERRORMESSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ErrorMessage.
     * @param value value to set the ErrorMessage
     */
    public void setErrorMessage(String value) {
        setAttributeInternal(ERRORMESSAGE, value);
    }

    /**
     * Gets the attribute value for LastAction, using the alias name LastAction.
     * @return the LastAction
     */
    public String getLastAction() {
        return (String)getAttributeInternal(LASTACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastAction.
     * @param value value to set the LastAction
     */
    public void setLastAction(String value) {
        setAttributeInternal(LASTACTION, value);
    }

    /**
     * Gets the attribute value for TotalInput, using the alias name TotalInput.
     * @return the TotalInput
     */
    public Number getTotalInput() {
        return (Number)getAttributeInternal(TOTALINPUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalInput.
     * @param value value to set the TotalInput
     */
    public void setTotalInput(Number value) {
        setAttributeInternal(TOTALINPUT, value);
    }

    /**
     * Gets the attribute value for DayProduction, using the alias name DayProduction.
     * @return the DayProduction
     */
    public Number getDayProduction() {
        return (Number)getAttributeInternal(DAYPRODUCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for DayProduction.
     * @param value value to set the DayProduction
     */
    public void setDayProduction(Number value) {
        setAttributeInternal(DAYPRODUCTION, value);
    }

    /**
     * Gets the attribute value for TotalProduetion, using the alias name TotalProduetion.
     * @return the TotalProduetion
     */
    public Number getTotalProduetion() {
        return (Number)getAttributeInternal(TOTALPRODUETION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalProduetion.
     * @param value value to set the TotalProduetion
     */
    public void setTotalProduetion(Number value) {
        setAttributeInternal(TOTALPRODUETION, value);
    }

    /**
     * Gets the attribute value for Wip, using the alias name Wip.
     * @return the Wip
     */
    public Number getWip() {
        return (Number)getAttributeInternal(WIP);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wip.
     * @param value value to set the Wip
     */
    public void setWip(Number value) {
        setAttributeInternal(WIP, value);
    }

    /**
     * Gets the attribute value for PreLineoutput, using the alias name PreLineoutput.
     * @return the PreLineoutput
     */
    public Number getPreLineoutput() {
        return (Number)getAttributeInternal(PRELINEOUTPUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PreLineoutput.
     * @param value value to set the PreLineoutput
     */
    public void setPreLineoutput(Number value) {
        setAttributeInternal(PRELINEOUTPUT, value);
    }

    /**
     * Gets the attribute value for Sam, using the alias name Sam.
     * @return the Sam
     */
    public Number getSam() {
        return (Number)getAttributeInternal(SAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sam.
     * @param value value to set the Sam
     */
    public void setSam(Number value) {
        setAttributeInternal(SAM, value);
    }

    /**
     * Gets the attribute value for SamValue, using the alias name SamValue.
     * @return the SamValue
     */
    public Number getSamValue() {
        return (Number)getAttributeInternal(SAMVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SamValue.
     * @param value value to set the SamValue
     */
    public void setSamValue(Number value) {
        setAttributeInternal(SAMVALUE, value);
    }

    /**
     * Gets the attribute value for Wash, using the alias name Wash.
     * @return the Wash
     */
    public String getWash() {
        return (String)getAttributeInternal(WASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wash.
     * @param value value to set the Wash
     */
    public void setWash(String value) {
        setAttributeInternal(WASH, value);
    }

    /**
     * Gets the attribute value for ProducedMin, using the alias name ProducedMin.
     * @return the ProducedMin
     */
    public Number getProducedMin() {
        return (Number)getAttributeInternal(PRODUCEDMIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProducedMin.
     * @param value value to set the ProducedMin
     */
    public void setProducedMin(Number value) {
        setAttributeInternal(PRODUCEDMIN, value);
    }

    /**
     * Gets the attribute value for BpoId, using the alias name BpoId.
     * @return the BpoId
     */
    public Number getBpoId() {
        return (Number)getAttributeInternal(BPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoId.
     * @param value value to set the BpoId
     */
    public void setBpoId(Number value) {
        setAttributeInternal(BPOID, value);
    }

    /**
     * Gets the attribute value for SystemId, using the alias name SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number)getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SystemId.
     * @param value value to set the SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity HederEOImpl.
     */
    public HederEOImpl getHederEO() {
        return (HederEOImpl)getAttributeInternal(HEDEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity HederEOImpl.
     */
    public void setHederEO(HederEOImpl value) {
        setAttributeInternal(HEDEREO, value);
    }

    /**
     * @return the associated entity DetailEOImpl.
     */
    public DetailEOImpl getDetailEO() {
        return (DetailEOImpl)getAttributeInternal(DETAILEO);
    }

    /**
     * Sets <code>value</code> as the associated entity DetailEOImpl.
     */
    public void setDetailEO(DetailEOImpl value) {
        setAttributeInternal(DETAILEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailEO1() {
        return (RowIterator)getAttributeInternal(DETAILEO1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDetailEO2() {
        return (RowIterator)getAttributeInternal(DETAILEO2);
    }


    /**
     * @param outSublineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number outSublineId) {
        return new Key(new Object[]{outSublineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_LINEOUTPUT_SBLINE_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setOutSublineId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        Map sessionScope = ADFContext.getCurrent().getSessionScope();   
               String user = (String)sessionScope.get("userId");
               String orgId  =(String)sessionScope.get("orgId");
               String unitName  =(String)sessionScope.get("unitName");
               
               System.out.println("ASSES INS DO DML 1 ------------------>"+user);
               System.out.println("ASSES INS DO DML 2------------------>"+orgId);
               System.out.println("ASSES INS DML 3 ------------------>"+unitName);
               
               if(DML_UPDATE == operation){
                         try {
                             
                             setLastUpdateDate((Date)Date.getCurrentDate()); 
                             setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                         } catch (SQLException f) {
                             System.out.println(f.getMessage());
                         }
                     }
                     else if (DML_INSERT == operation){
                      
                         try {
                             
                             //setHeaderNo(getSrNoString());
                             //setOrgId(new oracle.jbo.domain.Number(orgId));
                             //setAttribute1(unitName);
                             setCreationDate((Date)Date.getCurrentDate());  
                             setCreatedBy(new oracle.jbo.domain.Number(user));
                            
                            
                            
                         } catch (SQLException f) {
                             ;
                         }
                     } 
        super.doDML(operation, e);
    }
}
