package mnj.ont.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 10 18:56:34 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AdditionBlockEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getDivisionId();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        ProdTransId {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getProdTransId();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setProdTransId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        SublineNo {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getSublineNo();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setSublineNo((String)value);
            }
        }
        ,
        WorkingHourBasic {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getWorkingHourBasic();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setWorkingHourBasic((String)value);
            }
        }
        ,
        ManpowerBasic {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getManpowerBasic();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setManpowerBasic((String)value);
            }
        }
        ,
        WorkingHourOvertime {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getWorkingHourOvertime();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setWorkingHourOvertime((String)value);
            }
        }
        ,
        ManpowerOvertime {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getManpowerOvertime();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setManpowerOvertime((String)value);
            }
        }
        ,
        WorkingHourExtraot1 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getWorkingHourExtraot1();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setWorkingHourExtraot1((String)value);
            }
        }
        ,
        ManPowerExtraot1 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getManPowerExtraot1();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setManPowerExtraot1((String)value);
            }
        }
        ,
        WorkingHourExtraot2 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getWorkingHourExtraot2();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setWorkingHourExtraot2((String)value);
            }
        }
        ,
        ManPowerExtraot2 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getManPowerExtraot2();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setManPowerExtraot2((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getSeason();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getStyle();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Color {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getColor();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        Wash {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getWash();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setWash((String)value);
            }
        }
        ,
        Rrmarks {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getRrmarks();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setRrmarks((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        BuyerId1 {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getBuyerId1();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setBuyerId1((Number)value);
            }
        }
        ,
        HederEO {
            public Object get(AdditionBlockEOImpl obj) {
                return obj.getHederEO();
            }

            public void put(AdditionBlockEOImpl obj, Object value) {
                obj.setHederEO((HederEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AdditionBlockEOImpl object);

        public abstract void put(AdditionBlockEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int PRODTRANSID = AttributesEnum.ProdTransId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int SUBLINENO = AttributesEnum.SublineNo.index();
    public static final int WORKINGHOURBASIC = AttributesEnum.WorkingHourBasic.index();
    public static final int MANPOWERBASIC = AttributesEnum.ManpowerBasic.index();
    public static final int WORKINGHOUROVERTIME = AttributesEnum.WorkingHourOvertime.index();
    public static final int MANPOWEROVERTIME = AttributesEnum.ManpowerOvertime.index();
    public static final int WORKINGHOUREXTRAOT1 = AttributesEnum.WorkingHourExtraot1.index();
    public static final int MANPOWEREXTRAOT1 = AttributesEnum.ManPowerExtraot1.index();
    public static final int WORKINGHOUREXTRAOT2 = AttributesEnum.WorkingHourExtraot2.index();
    public static final int MANPOWEREXTRAOT2 = AttributesEnum.ManPowerExtraot2.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int WASH = AttributesEnum.Wash.index();
    public static final int RRMARKS = AttributesEnum.Rrmarks.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int BUYERID1 = AttributesEnum.BuyerId1.index();
    public static final int HEDEREO = AttributesEnum.HederEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AdditionBlockEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.AdditionBlockEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for ProdTransId, using the alias name ProdTransId.
     * @return the ProdTransId
     */
    public Number getProdTransId() {
        return (Number)getAttributeInternal(PRODTRANSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdTransId.
     * @param value value to set the ProdTransId
     */
    public void setProdTransId(Number value) {
        setAttributeInternal(PRODTRANSID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for SublineNo, using the alias name SublineNo.
     * @return the SublineNo
     */
    public String getSublineNo() {
        return (String)getAttributeInternal(SUBLINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SublineNo.
     * @param value value to set the SublineNo
     */
    public void setSublineNo(String value) {
        setAttributeInternal(SUBLINENO, value);
    }

    /**
     * Gets the attribute value for WorkingHourBasic, using the alias name WorkingHourBasic.
     * @return the WorkingHourBasic
     */
    public String getWorkingHourBasic() {
        return (String)getAttributeInternal(WORKINGHOURBASIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourBasic.
     * @param value value to set the WorkingHourBasic
     */
    public void setWorkingHourBasic(String value) {
        setAttributeInternal(WORKINGHOURBASIC, value);
    }

    /**
     * Gets the attribute value for ManpowerBasic, using the alias name ManpowerBasic.
     * @return the ManpowerBasic
     */
    public String getManpowerBasic() {
        return (String)getAttributeInternal(MANPOWERBASIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManpowerBasic.
     * @param value value to set the ManpowerBasic
     */
    public void setManpowerBasic(String value) {
        setAttributeInternal(MANPOWERBASIC, value);
    }

    /**
     * Gets the attribute value for WorkingHourOvertime, using the alias name WorkingHourOvertime.
     * @return the WorkingHourOvertime
     */
    public String getWorkingHourOvertime() {
        return (String)getAttributeInternal(WORKINGHOUROVERTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourOvertime.
     * @param value value to set the WorkingHourOvertime
     */
    public void setWorkingHourOvertime(String value) {
        setAttributeInternal(WORKINGHOUROVERTIME, value);
    }

    /**
     * Gets the attribute value for ManpowerOvertime, using the alias name ManpowerOvertime.
     * @return the ManpowerOvertime
     */
    public String getManpowerOvertime() {
        return (String)getAttributeInternal(MANPOWEROVERTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManpowerOvertime.
     * @param value value to set the ManpowerOvertime
     */
    public void setManpowerOvertime(String value) {
        setAttributeInternal(MANPOWEROVERTIME, value);
    }

    /**
     * Gets the attribute value for WorkingHourExtraot1, using the alias name WorkingHourExtraot1.
     * @return the WorkingHourExtraot1
     */
    public String getWorkingHourExtraot1() {
        return (String)getAttributeInternal(WORKINGHOUREXTRAOT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourExtraot1.
     * @param value value to set the WorkingHourExtraot1
     */
    public void setWorkingHourExtraot1(String value) {
        setAttributeInternal(WORKINGHOUREXTRAOT1, value);
    }

    /**
     * Gets the attribute value for ManPowerExtraot1, using the alias name ManPowerExtraot1.
     * @return the ManPowerExtraot1
     */
    public String getManPowerExtraot1() {
        return (String)getAttributeInternal(MANPOWEREXTRAOT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPowerExtraot1.
     * @param value value to set the ManPowerExtraot1
     */
    public void setManPowerExtraot1(String value) {
        setAttributeInternal(MANPOWEREXTRAOT1, value);
    }

    /**
     * Gets the attribute value for WorkingHourExtraot2, using the alias name WorkingHourExtraot2.
     * @return the WorkingHourExtraot2
     */
    public String getWorkingHourExtraot2() {
        return (String)getAttributeInternal(WORKINGHOUREXTRAOT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourExtraot2.
     * @param value value to set the WorkingHourExtraot2
     */
    public void setWorkingHourExtraot2(String value) {
        setAttributeInternal(WORKINGHOUREXTRAOT2, value);
    }

    /**
     * Gets the attribute value for ManPowerExtraot2, using the alias name ManPowerExtraot2.
     * @return the ManPowerExtraot2
     */
    public String getManPowerExtraot2() {
        return (String)getAttributeInternal(MANPOWEREXTRAOT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPowerExtraot2.
     * @param value value to set the ManPowerExtraot2
     */
    public void setManPowerExtraot2(String value) {
        setAttributeInternal(MANPOWEREXTRAOT2, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for Wash, using the alias name Wash.
     * @return the Wash
     */
    public String getWash() {
        return (String)getAttributeInternal(WASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wash.
     * @param value value to set the Wash
     */
    public void setWash(String value) {
        setAttributeInternal(WASH, value);
    }

    /**
     * Gets the attribute value for Rrmarks, using the alias name Rrmarks.
     * @return the Rrmarks
     */
    public String getRrmarks() {
        return (String)getAttributeInternal(RRMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rrmarks.
     * @param value value to set the Rrmarks
     */
    public void setRrmarks(String value) {
        setAttributeInternal(RRMARKS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for BuyerId1, using the alias name BuyerId1.
     * @return the BuyerId1
     */
    public Number getBuyerId1() {
        return (Number)getAttributeInternal(BUYERID1);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId1.
     * @param value value to set the BuyerId1
     */
    public void setBuyerId1(Number value) {
        setAttributeInternal(BUYERID1, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity HederEOImpl.
     */
    public HederEOImpl getHederEO() {
        return (HederEOImpl)getAttributeInternal(HEDEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity HederEOImpl.
     */
    public void setHederEO(HederEOImpl value) {
        setAttributeInternal(HEDEREO, value);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_LINEOUTPUT_ADDITION_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }
    
    /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String orgId  =(String)sessionScope.get("orgId");
            String unitName  =(String)sessionScope.get("unitName");
            
            System.out.println("ASSES INS DO DML 1 ------------------>"+user);
            System.out.println("ASSES INS DO DML 2------------------>"+orgId);
            System.out.println("ASSES INS DML 3 ------------------>"+unitName);
            
            if(DML_UPDATE == operation){
                      try {
                          
                          setLastUpdateDate((Date)Date.getCurrentDate()); 
                          setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                      } catch (SQLException f) {
                          System.out.println(f.getMessage());
                      }
                  }
                  else if (DML_INSERT == operation){
                   
                      try {
                          
                          //setHeaderNo(getSrNoString());
                          //setOrgId(new oracle.jbo.domain.Number(orgId));
                          //setAttribute1(unitName);
                          setCreationDate((Date)Date.getCurrentDate());  
                          setCreatedBy(new oracle.jbo.domain.Number(user));
                         
                         
                         
                      } catch (SQLException f) {
                          ;
                      }
                  } 
            
            super.doDML(operation, e);
        }

}
