package mnj.ont.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 12 17:10:01 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgOutputOffStandardImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ProdTransId {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getProdTransId();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setProdTransId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        StitchingLine {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getStitchingLine();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setStitchingLine((String)value);
            }
        }
        ,
        TotalStandad {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getTotalStandad();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setTotalStandad((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getAttribute1();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getAttribute2();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getAttribute3();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getAttribute4();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getAttribute5();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        HederEO {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getHederEO();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setHederEO((HederEOImpl)value);
            }
        }
        ,
        MnjMfgOutputOffStandardL {
            public Object get(MnjMfgOutputOffStandardImpl obj) {
                return obj.getMnjMfgOutputOffStandardL();
            }

            public void put(MnjMfgOutputOffStandardImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgOutputOffStandardImpl object);

        public abstract void put(MnjMfgOutputOffStandardImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRODTRANSID = AttributesEnum.ProdTransId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int STITCHINGLINE = AttributesEnum.StitchingLine.index();
    public static final int TOTALSTANDAD = AttributesEnum.TotalStandad.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int HEDEREO = AttributesEnum.HederEO.index();
    public static final int MNJMFGOUTPUTOFFSTANDARDL = AttributesEnum.MnjMfgOutputOffStandardL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgOutputOffStandardImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.MnjMfgOutputOffStandard");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ProdTransId, using the alias name ProdTransId.
     * @return the ProdTransId
     */
    public Number getProdTransId() {
        return (Number)getAttributeInternal(PRODTRANSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdTransId.
     * @param value value to set the ProdTransId
     */
    public void setProdTransId(Number value) {
        setAttributeInternal(PRODTRANSID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for StitchingLine, using the alias name StitchingLine.
     * @return the StitchingLine
     */
    public String getStitchingLine() {
        return (String)getAttributeInternal(STITCHINGLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchingLine.
     * @param value value to set the StitchingLine
     */
    public void setStitchingLine(String value) {
        setAttributeInternal(STITCHINGLINE, value);
    }

    /**
     * Gets the attribute value for TotalStandad, using the alias name TotalStandad.
     * @return the TotalStandad
     */
    public Number getTotalStandad() {
        return (Number)getAttributeInternal(TOTALSTANDAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalStandad.
     * @param value value to set the TotalStandad
     */
    public void setTotalStandad(Number value) {
        setAttributeInternal(TOTALSTANDAD, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity HederEOImpl.
     */
    public HederEOImpl getHederEO() {
        return (HederEOImpl)getAttributeInternal(HEDEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity HederEOImpl.
     */
    public void setHederEO(HederEOImpl value) {
        setAttributeInternal(HEDEREO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgOutputOffStandardL() {
        return (RowIterator)getAttributeInternal(MNJMFGOUTPUTOFFSTANDARDL);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_OUTPUT_OFF_STANDARD_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }
    
    /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String orgId  =(String)sessionScope.get("orgId");
            String unitName  =(String)sessionScope.get("unitName");
            
            System.out.println("ASSES INS DO DML 1 ------------------>"+user);
            System.out.println("ASSES INS DO DML 2------------------>"+orgId);
            System.out.println("ASSES INS DML 3 ------------------>"+unitName);
            
            if(DML_UPDATE == operation){
                      try {
                          
                          setLastUpdateDate((Date)Date.getCurrentDate()); 
                          setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                      } catch (SQLException f) {
                          System.out.println(f.getMessage());
                      }
                  }
                  else if (DML_INSERT == operation){
                   
                      try {
                          
                          //setHeaderNo(getSrNoString());
                          //setOrgId(new oracle.jbo.domain.Number(orgId));
                          //setAttribute1(unitName);
                          setCreationDate((Date)Date.getCurrentDate());  
                          setCreatedBy(new oracle.jbo.domain.Number(user));
                         
                         
                         
                      } catch (SQLException f) {
                          ;
                      }
                  } 
            
            super.doDML(operation, e);
        }


}
